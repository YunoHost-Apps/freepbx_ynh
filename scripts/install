#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source .fonctions
source /usr/share/yunohost/helpers

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

ynh_check_error	# Active trap pour arrêter le script si une erreur est détectée.

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THIS ARGS
#=================================================

path_url=$(ynh_normalize_url_path $path_url)	# Vérifie et corrige la syntaxe du path.
CHECK_DOMAINPATH	# Vérifie la disponibilité du path et du domaine.
CHECK_FINALPATH	# Vérifie que le dossier de destination n'est pas déjà utilisé.

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

user="$app"
ynh_app_setting_set "$app" is_public "$is_public"

#=================================================
# Nginx Configuration
#=================================================
final_path=/var/www/$app
nginxconf=../conf/nginx.conf
sed -i "s@YNH_WWW_PATH@$path_url@g" $nginxconf
sed -i "s@YNH_WWW_ALIAS@$final_path@g" $nginxconf
sudo chown root: $nginxconf
sudo chmod 644 $nginxconf
sudo cp $nginxconf /etc/nginx/conf.d/$domain.d/$app.conf


#=================================================
# Installation des dépendances
#=================================================

sudo apt-get update && sudo apt-get upgrade -y 

sudo apt-get install -yy build-essential linux-headers-`uname -r` openssh-server \
  bison flex php5 php5-curl php5-cli php5-mysql php-pear php5-gd curl sox \
  libncurses5-dev libssl-dev libmysqlclient-dev mpg123 libxml2-dev libnewt-dev sqlite3 \
  libsqlite3-dev pkg-config automake libtool autoconf git unixodbc-dev uuid uuid-dev \
  libasound2-dev libogg-dev libvorbis-dev libcurl4-openssl-dev libical-dev libneon27-dev libsrtp0-dev\
  libspandsp-dev libmyodbc subversion libtool-bin libtool* python-dev libvpb0
  
  sudo pear install Console_Getopt
  
#=================================================  
#  Install iksemel
#=================================================

pushd /usr/src
sudo git clone https://github.com/meduketto/iksemel.git /usr/src/iksemel
pushd iksemel
sudo ./autogen.sh
sudo chmod +x configure
sudo ./configure
sudo make
sudo make install
sudo ldconfig
popd
popd

#=================================================
# Installation of asterisk
#=================================================

pushd /usr/src
sudo wget http://downloads.asterisk.org/pub/telephony/dahdi-linux-complete/dahdi-linux-complete-current.tar.gz
sudo wget http://downloads.asterisk.org/pub/telephony/libpri/libpri-current.tar.gz
sudo wget http://downloads.asterisk.org/pub/telephony/asterisk/asterisk-13-current.tar.gz
sudo wget -O jansson.tar.gz https://github.com/akheron/jansson/archive/v2.7.tar.gz
sudo wget http://www.pjsip.org/release/2.4/pjproject-2.4.tar.bz2
popd

#=================================================
# Installation of DAHDI 
#=================================================

pushd /usr/src
sudo tar xvfz dahdi-linux-complete-current.tar.gz
sudo rm -f dahdi-linux-complete-current.tar.gz
pushd dahdi-linux-complete-*
sudo make all
sudo make install
sudo make config
pushd /usr/src
sudo tar xvfz libpri-current.tar.gz
sudo rm -f libpri-current.tar.gz
pushd libpri-*
sudo make
sudo make install
popd
popd
popd

#=================================================
# Compile and install pjproject
#=================================================

pushd /usr/src
sudo tar -xjvf pjproject-2.4.tar.bz2
sudo rm -f pjproject-2.4.tar.bz2
pushd pjproject-2.4
sudo CFLAGS='-DPJ_HAS_IPV6=1' ./configure --enable-shared --disable-sound --disable-resample --disable-video --disable-opencore-amr
sudo make dep
sudo make
sudo make install
popd
popd

#=================================================
# Compile and Install jansson
#=================================================

pushd /usr/src
sudo tar vxfz jansson.tar.gz
sudo rm -f jansson.tar.gz
pushd jansson-*
sudo autoreconf -i
sudo ./configure
sudo make
sudo make install
popd
popd

#=================================================
# Compile and install Asterisk
#=================================================

pushd /usr/src
sudo tar xvfz asterisk-13-current.tar.gz
sudo rm -f asterisk-13-current.tar.gz
pushd asterisk-*
sudo sh contrib/scripts/get_mp3_source.sh
sudo sh contrib/scripts/install_prereq install
sudo ./configure
sudo make
sudo make install
sudo make config
sudo ldconfig
sudo update-rc.d -f asterisk remove
popd
popd

#=================================================
# Installation of Soundfile of Asterisk
#=================================================

pushd /var/lib/asterisk/sounds
sudo wget http://downloads.asterisk.org/pub/telephony/sounds/asterisk-core-sounds-en-wav-current.tar.gz
sudo wget http://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-wav-current.tar.gz
sudo tar xvf asterisk-core-sounds-en-wav-current.tar.gz
sudo rm -f asterisk-core-sounds-en-wav-current.tar.gz
sudo tar xfz asterisk-extra-sounds-en-wav-current.tar.gz
sudo rm -f asterisk-extra-sounds-en-wav-current.tar.gz
# Wideband Audio download 
sudo wget http://downloads.asterisk.org/pub/telephony/sounds/asterisk-core-sounds-en-g722-current.tar.gz
sudo wget http://downloads.asterisk.org/pub/telephony/sounds/asterisk-extra-sounds-en-g722-current.tar.gz
sudo tar xfz asterisk-extra-sounds-en-g722-current.tar.gz
sudo rm -f asterisk-extra-sounds-en-g722-current.tar.gz
sudo tar xfz asterisk-core-sounds-en-g722-current.tar.gz
sudo rm -f asterisk-core-sounds-en-g722-current.tar.gz
popd

sudo mkdir /var/lib/asterisk/sounds/fr
pushd /var/lib/asterisk/sounds/fr
sudo wget -O core.zip https://www.asterisksounds.org/fr-fr/download/asterisk-sounds-core-fr-FR-sln16.zip
sudo wget -O extra.zip https://www.asterisksounds.org/fr-fr/download/asterisk-sounds-extra-fr-FR-sln16.zip
sudo unzip core.zip
sudo unzip extra.zip
sudo chown -R asterisk.asterisk /var/lib/asterisk/sounds/fr
find /var/lib/asterisk/sounds/fr -type d -exec chmod 0775 {} \;
popd
#=================================================
# Création de la base de données
#=================================================

db_name=$app
db_user=$app
db_pass=$(ynh_string_random)
ynh_mysql_create_db "$db_name" "$db_user" "$db_pass"
ynh_app_setting_set "$app" db_name "$db_name"
ynh_app_setting_set "$app" db_pass "$db_pass"
ynh_app_setting_set "$app" db_user "$db_user"

#=================================================
# Installation of FreePBX + Astérisk
#=================================================

sudo useradd -m asterisk
sudo chown asterisk. /var/run/asterisk
sudo chown -R asterisk. /etc/asterisk
sudo chown -R asterisk. /var/{lib,log,spool}/asterisk
sudo chown -R asterisk. /usr/lib/asterisk

cat >> /etc/odbcinst.ini << EOF
[MySQL]
Description = ODBC for MySQL
Driver = /usr/lib/x86_64-linux-gnu/odbc/libmyodbc.so
Setup = /usr/lib/x86_64-linux-gnu/odbc/libodbcmyS.so
FileUsage = 1
EOF

sudo cat >> /etc/odbc.ini << EOF
[MySQL-asteriskcdrdb]
Description=MySQL connection to 'db_name' database
driver=MySQL
user=$db_user
password=$db_pass
server=localhost
database=db_name
Port=3306
Socket=/var/run/mysqld/mysqld.sock
option=3
EOF

pushd /usr/src
sudo wget http://mirror.freepbx.org/modules/packages/freepbx/freepbx-13.0-latest.tgz 
sudo tar vxfz freepbx-13.0-latest.tgz /var/www/$app --strip-components 1
sudo rm -f freepbx-13.0-latest.tgz
sudo pushd freepbx
sudo ./start_asterisk start
sudo ./install --dbengine="mysql" --dbname="$db_name" --dbuser="$db_user" --dbpass="$db_pass" --webroot="/var/www/$app" -n
popd
popd

sudo cp ../conf/freepbx.service /etc/systemd/system/freepbx.service
sudo chown root: /etc/systemd/system/freepbx.service
# Démarrage auto du service
sudo systemctl enable freepbx.service

#=================================================
# set up the services
#=================================================

sudo chkconfig httpd off
sudo chkconfig php-fpm on
sudo chkconfig nginx on
sudo service httpd stop
sudo service php-fpm reload
sudo service nginx reload
